version: '3'

services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v2.9
    container_name: opentalk-traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - default
      - traefik-net
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./config/traefik/dynamic:/etc/traefik/dynamic:ro
      - traefik-certificates:/etc/traefik/acme
      - traefik-logs:/var/log/traefik
    environment:
      - TRAEFIK_ACME_EMAIL=${TRAEFIK_ACME_EMAIL:-admin@example.com}
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      # Basic auth middleware for dashboard
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_USER:-admin}:${TRAEFIK_DASHBOARD_PASSWORD_HASH:-$$apr1$$q8mL99LP$$LLuoHLQhQz0kFgwFqbLbE0}"

  # Frontend with Traefik integration
  frontend:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.routers.frontend.middlewares=securityHeaders@file"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - default
      - traefik-net

  # Controller with Traefik integration
  controller:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.controller.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.controller.entrypoints=websecure"
      - "traefik.http.routers.controller.tls.certresolver=letsencrypt"
      - "traefik.http.routers.controller.middlewares=securityHeaders@file"
      - "traefik.http.services.controller.loadbalancer.server.port=11311"
    networks:
      - default
      - traefik-net

  # Keycloak with Traefik integration
  keycloak:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.${DOMAIN}`)"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls.certresolver=letsencrypt"
      - "traefik.http.routers.keycloak.middlewares=securityHeaders@file"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    networks:
      - default
      - traefik-net

  # LiveKit with Traefik integration
  livekit:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.livekit.rule=Host(`livekit.${DOMAIN}`)"
      - "traefik.http.routers.livekit.entrypoints=websecure"
      - "traefik.http.routers.livekit.tls.certresolver=letsencrypt"
      - "traefik.http.services.livekit.loadbalancer.server.port=7880"
      # Special WebSocket configuration
      - "traefik.http.middlewares.livekit-ws.compress=true"
      - "traefik.http.middlewares.livekit-ws.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.livekit.middlewares=livekit-ws"
    networks:
      - default
      - traefik-net

  # MinIO with Traefik integration
  minio:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.${DOMAIN}`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls.certresolver=letsencrypt"
      - "traefik.http.routers.minio.middlewares=securityHeaders@file"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      # MinIO Console
      - "traefik.http.routers.minio-console.rule=Host(`minio-console.${DOMAIN}`)"
      - "traefik.http.routers.minio-console.entrypoints=websecure"
      - "traefik.http.routers.minio-console.tls.certresolver=letsencrypt"
      - "traefik.http.routers.minio-console.middlewares=securityHeaders@file"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
    networks:
      - default
      - traefik-net

  # RabbitMQ Management UI with Traefik integration (optional)
  rabbitmq:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.${DOMAIN}`)"
      - "traefik.http.routers.rabbitmq.entrypoints=websecure"
      - "traefik.http.routers.rabbitmq.tls.certresolver=letsencrypt"
      - "traefik.http.routers.rabbitmq.middlewares=securityHeaders@file"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
    networks:
      - default
      - traefik-net

# Create a dedicated network for Traefik
networks:
  traefik-net:
    external: false

# Add volumes for Traefik certificates and logs
volumes:
  traefik-certificates:
  traefik-logs: