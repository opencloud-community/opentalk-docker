# LiveKit server configuration for OpenTalk

# The port that LiveKit's real-time communication (RTC) service listens on 
# The controller connects to this port via HTTP to control LiveKit
port: 7880

# WebSocket port for client connections
# This is the port that browsers connect to
ws_port: 7881

# UDP port range for media traffic
# Each room requires a UDP port to establish media connections with all participants
# Using UDP relaying is not recommended for production deployments; it's better to set up
# PORT_RANGE=40000-40100 as an environment variable and use a separate ICE/TURN server
rtc:
  port_range:
    start: 7882
    end: 7882

# API keys for authenticating with the LiveKit server
# IMPORTANT: Replace these values with your own in production!
keys:
  devkey: devsecret

# Redis configuration for multi-node LiveKit deployments
# Uncomment and configure this for production setups with multiple LiveKit nodes
#redis:
#  address: redis:6379
#  username: ""
#  password: ""
#  db: 0

# Development mode settings
development:
  # Allow insecure connections in development
  # Do not use this in production!
  allow_insecure_cors: true
  disableTrickle: false

# Logging configuration
logging:
  # Possible values: debug, info, warn, error
  level: info
  
  # Possible values: console, json
  format: console
  
  # Output sample stats at info level
  sample_duration: 15s

# TURN server configuration
# For production environments, you should set up a separate TURN server
# and configure it here
turn:
  enabled: true
  domain: ""
  cert_file: ""
  key_file: ""
  tls_port: 5349 
  udp_port: 3478
  external_tls: true
  
# Room configuration
room:
  # Default maximum number of participants per room
  max_participants: 100
  
  # Enable/disable recording
  enable_remote_unmute: false
  
  # Room initialization timeout
  empty_timeout: 60s

# WebRTC configuration
webrtc:
  # ICE servers for NAT traversal
  # In production, you would configure your own TURN servers here
  ice_servers:
    - urls: stun:stun.l.google.com:19302
    # For production, add your own TURN servers:
    #- urls: turn:turn.example.com:3478
    #  username: turnuser
    #  credential: turnpassword
  
  # UDP min/max port range
  # This should match the port_range above
  udp_port_range: "7882-7882"